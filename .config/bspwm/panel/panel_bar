#!/bin/zsh

. panel_colors # source colors

function battery()
{
	BAT=`acpi -b | awk '{gsub(/%,/,""); print $4}' | sed 's/%//g'`
	STATUS=`acpi -b | awk '{gsub(/,/,""); print $3}'`
	LEVEL=$(acpi | awk '{print $4}' | cut -d ',' -f 1)

	if [[ $STATUS != "Discharging" ]]; then {
		if [[ $BAT != 100 ]]; then {
			battery="%{B$LIGHT_GRAY} %{B-}%{B$GRAY}%{F$PURPLE} AC %{F-}%{B-}%{B$DARK_GRAY}%{F$WHITE} $LEVEL %{F-}%{B-}"
		} else {
			battery="%{B$LIGHT_GRAY} %{B-}%{B$GRAY}%{F$CYAN} AC %{F-}%{B-}%{B$DARK_GRAY}%{F$WHITE} $LEVEL %{F-}%{B-}"
		} fi;
	} elif [[ $BAT -lt 10 ]]; then {
		battery="%{B$LIGHT_GRAY} %{B-}%{B$GRAY}%{F$COLOR_WARNING} bat %{F-}%{B-}%{B$DARK_GRAY}%{F$WHITE} $LEVEL %{F-}%{B-}"
	} elif [[ $BAT -lt 100 ]]; then {
			battery="%{B$LIGHT_GRAY} %{B-}%{B$GRAY}%{F$PURPLE} bat %{F-}%{B-}%{B$DARK_GRAY}%{F$WHITE} $LEVEL %{F-}%{B-}"
	} else {
		battery="%{B$LIGHT_GRAY} %{B-}%{B$GRAY}%{F$CYAN} bat %{F-}%{B-}%{B$DARK_GRAY}%{F$WHITE} $LEVEL %{F-}%{B-}"
	} fi; print $battery
}

function mailcount()
{
	MAILCOUNT=$(cat /home/ttzhou/.mailcount)
	# Set Icon
	#mailicon=""
	if [[ $MAILCOUNT -eq 0 ]]; then {
		mail="%{B$LIGHT_GRAY} %{B-}%{B$GRAY}%{F$SECTION_TITLE_NORMAL_COLOR} mail %{F-}%{B-}%{B$DARK_GRAY}%{F$WHITE} $(cat /home/ttzhou/.mailcount) %{F-}%{B-}"
	} else {
		mail="%{B$LIGHT_GRAY} %{B-}%{B$GRAY}%{F$CYAN} mail %{F-}%{B-}%{B$DARK_GRAY}%{F$WHITE} $(cat /home/ttzhou/.mailcount) %{F-}%{B-}"
	} fi; print $mail
}

function volume()
{
	VOLLVL=$(exec amixer get Master | egrep -o "[0-9]+%" | egrep -o "[0-9]*" | head -n 1)
	MUTE=$(exec amixer get Master | egrep -o "off" | head -n 1)
	# Set Icon
	#volicon=""
	if [[ $MUTE -eq "off" ]]; then {
		volume="%{B$LIGHT_GRAY} %{B-}%{B$GRAY}%{F$SECTION_TITLE_NORMAL_COLOR} vol %{F-}%{B-}%{B$DARK_GRAY}%{F$WHITE} $VOLLVL %{F-}%{B-}"
	} else {
		volume="%{B$LIGHT_GRAY} %{B-}%{B$GRAY}%{F$CYAN} vol %{F-}%{B-}%{B$DARK_GRAY}%{F$WHITE} $VOLLVL %{F-}%{B-}"
	} fi; print $volume
}

function pkgcount()
{
	PKGCOUNT=$(exec wc -l /home/ttzhou/.pacupdates | sed 's/\([0-9]*\) .*/\1/g')
	# Set Icon
	#pkgicon=""
	if [[ $PKGCOUNT -eq 0 ]]; then {
		updates="%{B$LIGHT_GRAY} %{B-}%{B$GRAY}%{F$SECTION_TITLE_NORMAL_COLOR} pkg %{F-}%{B-}%{B$DARK_GRAY}%{F$WHITE} ${PKGCOUNT} %{F-}%{B-}"
	} else {
		updates="%{B$LIGHT_GRAY} %{B-}%{B$GRAY}%{F$CYAN} pkg %{F-}%{B-}%{B$DARK_GRAY}%{F$WHITE} ${PKGCOUNT} %{F-}%{B-}"
	} fi; print $updates
}

function nowplaying()
{
	SONG=$(mpc current)
	ALBUM=$(mpc status -f %album% | sed 's/\(.*\)/\L\1/g' | head -n 1)
	ARTIST=$(mpc current | sed 's/\(.*\)/\L\1/g' | cut -d '-' -f 1 | sed 's/[ \t]*$//g')
	TITLE=$(mpc current | sed 's/\(.*\)/\L\1/g' | cut -d '-' -f 2 | sed 's/^\s*//g')
	STATUS=$(mpc status | cut -d '' -f 1 | tr '\n' ' ' | cut -d '[' -f 2 | cut -d ']' -f 1)

	if [ -z "$SONG" ]; then {
		music="%{B$LIGHT_GRAY} %{B-}%{B$GRAY}%{F$WHITE} mpc %{F-}%{B-}%{F$GRAY}▒%{F-}%{B$GRAY}%{F$SECTION_TITLE_NORMAL_COLOR} artist %{F-}%{B-}%{B$DARK_GRAY}%{F$SECTION_TITLE_NORMAL_COLOR} song %{F-}%{B-}%{B$GRAY}%{F$SECTION_TITLE_NORMAL_COLOR} album %{F-}%{B-}"
	} else {
		case $STATUS in
			"playing")
				music="%{B$LIGHT_GRAY} %{B-}%{B$GRAY}%{F$CYAN} mpc %{F-}%{B-}%{F$GRAY}▒%{F-}%{B$GRAY}%{F$WHITE} ${ARTIST} %{F-}%{B-}%{B$DARK_GRAY}%{F$PURPLE} ${TITLE} %{F-}%{B-}%{B$GRAY}%{F$COLOR9} ${ALBUM} %{F-}%{B-}"
				;;
			"paused")
				music="%{B$LIGHT_GRAY} %{B-}%{B$GRAY}%{F$WHITE} mpc %{F-}%{B-}%{F$GRAY}▒%{F-}%{B$GRAY}%{F$SECTION_TITLE_NORMAL_COLOR} ${ARTIST} %{F-}%{B-}%{B$DARK_GRAY}%{F$SECTION_TITLE_NORMAL_COLOR} ${TITLE} %{F-}%{B-}%{B$GRAY}%{F$SECTION_TITLE_NORMAL_COLOR} ${ALBUM} %{F-}%{B-}"
				;;
		esac
	} fi; print $music
}

function netwk()
{
	NETWK=$(wpa_cli -i wlp12s0 status | sed -n 's/^ssid=//p')
	#STRENGTH=$(sudo cat /proc/net/wireless | tr '\n' ' ' | sed 's/.*wlp12s0: .*\?\(-[0-9][0-9]\)\. .*/\1/g' | cut -d '%' -f 1)

	if [ -z "$NETWK" ]; then {
		wifi="%{B$LIGHT_GRAY} %{B-}%{B$GRAY}%{F$SECTION_TITLE_NORMAL_COLOR} net %{F-}%{B-}%{F$DARK_GRAY}▒%{F-}%{B$DARK_GRAY}%{F$WHITE} --- %{F-}%{B-}"
	} else {
		wifi="%{B$LIGHT_GRAY} %{B-}%{B$GRAY}%{F$SECTION_TITLE_NORMAL_COLOR} net %{F-}%{B-}%{F$DARK_GRAY}▒%{F-}%{B$DARK_GRAY}%{F$WHITE} $NETWK %{F-}%{B-}"
		#wifi="%{B$LIGHT_GRAY} %{B-}%{B$GRAY}%{F$CYAN} net %{F-}%{B-}%{F$DARK_GRAY}▒%{F-}%{B$DARK_GRAY}%{F$WHITE} $NETWK %{F-}%{B-}%{B$GRAY}%{F$COLOR9} $STRENGTH %{F-}%{B-}"
	} fi; print $wifi
}

function weather()
{
	COND=$(cat /home/ttzhou/.weather | cut -d ':' -f 1)
	TEMP=$(cat /home/ttzhou/.weather | cut -d ':' -f 2 | cut -d ' ' -f 2)
	print "%{B$LIGHT_GRAY} %{B-}%{B$GRAY}%{F$SECTION_TITLE_NORMAL_COLOR} $TEMP %{F-}%{B-}%{B$DARK_GRAY}%{F$WHITE} $COND %{F-}%{B-}"
}

# read and pipe
while read -r line ; do
	case $line in
		S*)
			clock="%{B$LIGHT_GRAY} %{B-}%{B$DARK_GRAY}%{F$INACTIVE_DESKTOP_COLOR} $(date +"%b %d") %{F-}%{B-}%{B$GRAY}%{F$INACTIVE_DESKTOP_COLOR} $(date +"%a") %{F-}%{B-}%{B$LIGHT_GRAY}%{F$WHITE}${line#?} %{F-}%{B-}"
			sys_info="%{r} $(netwk) $(volume) $(pkgcount) $(battery) $(weather) $clock" # Right side sys bar
			;;
		W*)
			main_wm_infos=""
			ext_wm_infos=""
			line=(${(s/:/)${line#?}})
			for item in $line; do
				name=${item#?}
				case $item in
					[Mm]*)
						mon=${name}
						if [[ $item = "MLaptop" ]]; then {
							main_desk="%{B$LIGHT_GRAY} %{B-}%{B$GRAY}%{F$ACTIVE_DESKTOP_COLOR} main %{F-}%{B-}%{B$LIGHT_GRAY} %{B-}%{B$DARK_GRAY} %{B-}"
							ext_desk="%{B$LIGHT_GRAY} %{B-}%{B$GRAY}%{F$INACTIVE_DESKTOP_COLOR} external %{F-}%{B-}%{B$LIGHT_GRAY} %{B-}%{B$DARK_GRAY} %{B-}"
						} elif [[ $item = "MExternal" ]]; then {
							main_desk="%{B$LIGHT_GRAY} %{B-}%{B$GRAY}%{F$INACTIVE_DESKTOP_COLOR} main %{F-}%{B-}%{B$LIGHT_GRAY} %{B-}%{B$DARK_GRAY} %{B-}"
							ext_desk="%{B$LIGHT_GRAY} %{B-}%{B$GRAY}%{F$ACTIVE_DESKTOP_COLOR} external %{F-}%{B-}%{B$LIGHT_GRAY} %{B-}%{B$DARK_GRAY} %{B-}"
						} fi;
						;;
					[OFU]*)
						# active desktop
						[[ $mon = "Laptop" ]]   && main_wm_infos="$main_wm_infos%{B$DARK_GRAY}%{F$ACTIVE_DESKTOP_COLOR} ${name} %{F-}%{B-}";
						[[ $mon = "External" ]] && ext_wm_infos="$ext_wm_infos%{B$DARK_GRAY}%{F$ACTIVE_DESKTOP_COLOR} ${name} %{F-}%{B-}";
						;;
					o*)
						# inactive but occupied desktop
						[[ $mon = "Laptop" ]]   && main_wm_infos="$main_wm_infos%{B$DARK_GRAY}%{F$OCCUPIED_DESKTOP_COLOR} ${name} %{F-}%{B-}";
						[[ $mon = "External" ]] && ext_wm_infos="$ext_wm_infos%{B$DARK_GRAY}%{F$OCCUPIED_DESKTOP_COLOR} ${name} %{F-}%{B-}";
						;;
					f*)
						# inactive desktop
						[[ $mon = "Laptop" ]]   && main_wm_infos="$main_wm_infos%{B$DARK_GRAY}%{F$INACTIVE_DESKTOP_COLOR} ${name} %{F-}%{B-}";
						[[ $mon = "External" ]] && ext_wm_infos="$ext_wm_infos%{B$DARK_GRAY}%{F$INACTIVE_DESKTOP_COLOR} ${name} %{F-}%{B-}";
						;;
					u*)
						# urgent desktop
						[[ $mon = "Laptop" ]]   && main_wm_infos="$main_wm_infos%{B$DARK_GRAY}%{F$URGENT_DESKTOP_COLOR} ${name} %{F-}%{B-}";
						[[ $mon = "External" ]] && ext_wm_infos="$ext_wm_infos%{B$DARK_GRAY}%{F$URGENT_DESKTOP_COLOR} ${name} %{F-}%{B-}";
						;;
					L*)
						# layout
						layout=$(printf "%s" "${name}" | sed 's/\(.\).*/\U\1/')

						case $layout in
							T)
								layout="%{B$GRAY}%{F$WHITE}%{F$URGENT_DESKTOP_COLOR} T %{F-}%{B-}"
								;;
							M)
								layout="%{B$GRAY}%{F$WHITE}%{F$URGENT_DESKTOP_COLOR} M %{F-}%{B-}"
								;;
						esac
						;;
				esac
			done
			;;
	esac;

	if [[ $EXT_CONNECTED = 1 ]]; then {
		printf "%s\n" "%{S0}%{l}$ext_desk$ext_wm_infos%{B$DARK_GRAY} %{B-}$layout $(nowplaying) %{r} $clock%{S1}%{l}$main_desk$main_wm_infos%{B$DARK_GRAY} %{B-}$layout $sys_info"
	} else {
		printf "%s\n" "%{S0}%{l}$main_desk$main_wm_infos%{B$DARK_GRAY} %{B-}$layout $(nowplaying) $sys_info"
	} fi;

done

# vim: set ft=zsh:
